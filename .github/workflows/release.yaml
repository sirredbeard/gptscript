name: release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  release-tag:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          cache: false
          go-version: "1.22"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: v1.23.0
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_PROJECT_TOKEN: ${{ secrets.GH_PROJECT_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.ref_name }}
  winget-release:
    needs: release-tag
    runs-on: windows-latest
    steps:
      - name: Install winget-create
        run: |
            Invoke-WebRequest -Uri 'https://aka.ms/wingetcreate/latest' -OutFile 'wingetcreate.exe'      
      - name: Update Winget Manifest
        run: |
         ./wingetcreate.exe update gptscript-ai.gptscript --urls $('${{ toJson(github.event.release.assets) }}' | ConvertFrom-Json | Where-Object { $_.name -eq "gptscript-${{ github.event.release.tag_name }}-windows-amd64.zip" }).browser_download_url --version "${{ github.event.release.tag_name }}" --token "${{ secrets.GITHUB_TOKEN }}" --submit
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

